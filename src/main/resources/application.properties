quarkus.http.root-path=/store

quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept,content-type,x-requested-with,x-foobar,Access-Control-Allow-Origin
quarkus.http.cors.methods=GET,POST,PUT,DELETE

quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/store
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.max-size=2
quarkus.datasource.jdbc.min-size=1

quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.sql-load-script=no-file
quarkus.transaction-manager.default-transaction-timeout=5m

quarkus.flyway.migrate-at-start=true

quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.theme=material
quarkus.swagger-ui.title=Navitá Store API
quarkus.smallrye-openapi.info-title=Navitá Store API

fcm.firebase.database.url=https://navita-connect-emm.firebaseio.com
fcm.firebase.private.key.resource=fcm/emm-navita-store-firebase-adminsdk-nps3b-a26cd0feb7.json

rabbitmq-host=amqp
rabbitmq-username=my-username
rabbitmq-password=my-password
%dev.rabbitmq-host=localhost
%dev.rabbitmq-username=guest
%dev.rabbitmq-password=guest
rabbitmq-port=5672

CLOUD_PROFILE=nvt-store-hom

# solicita para o AMAPI (backend) listagem de aplicativos -> enviar para  queue nvt-store-hom-appList-queue
mp.messaging.outgoing.app.connector=smallrye-rabbitmq
mp.messaging.outgoing.app.exchange.name=${CLOUD_PROFILE:none}-app-exchange

# envia para o AMAPI (backend) feedback da instalacao do aplicativo -> não necessita de retorno
mp.messaging.outgoing.feedback.connector=smallrye-rabbitmq
mp.messaging.outgoing.feedback.exchange.name=${CLOUD_PROFILE:none}-feedback-exchange

# recebe do AMAPI a listagem de aplicativos disponivel referente a listagem privada
mp.messaging.incoming.applist.connector=smallrye-rabbitmq
mp.messaging.incoming.applist.queue.name=${CLOUD_PROFILE:none}-appList-queue

# recebe do AMAPI uma lista de aplicativos que deveram ser deletados
mp.messaging.incoming.appdelete.connector=smallrye-rabbitmq
mp.messaging.incoming.appdelete.queue.name=${CLOUD_PROFILE:none}-appDelete-queue

# recebe do AMAPI uma notificacao para atualizacao da listagem de aplicativos (somente quando for incluido/removido app da listagem privada)
mp.messaging.incoming.appsync.connector=smallrye-rabbitmq
mp.messaging.incoming.appsync.queue.name=${CLOUD_PROFILE:none}-appSync-queue

smallrye.messaging.worker.rabbitmq-thread-pool.max-concurrency=10